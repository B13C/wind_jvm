<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='46825' time_ms='1512382672878'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
25.0-b70-debug
</release>
<info>
OpenJDK 64-Bit Server VM (25.0-b70-debug) for bsd-amd64 JRE (1.8.0-internal-zhengxiaolin_2017_10_20_11_06-b00), built on Oct 20 2017 11:08:54 by &quot;zhengxiaolin&quot; with gcc 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.42)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+PrintAssembly 
</args>
<command>
Test
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.0-b70-debug
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/Users/zhengxiaolin/Library/Java/Extensions:/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java
java.endorsed.dirs=/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/endorsed
sun.boot.library.path=/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib
java.library.path=/Users/zhengxiaolin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
java.home=/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk
java.class.path=.
sun.boot.class.path=/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/resources.jar:/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/rt.jar:/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/sunrsasign.jar:/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/jsse.jar:/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/jce.jar:/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/charsets.jar:/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/lib/jfr.jar:/Users/zhengxiaolin/jvm/jdk8_mac/build/macosx-x86_64-normal-server-slowdebug/jdk/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
sun.java.command=Test
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<blob name='MethodHandlesAdapterBlob' size='182000'>
<sect index='1' size='182000' free='177710'/>
</blob>
<writer thread='20739'/>
Could not load hsdis-amd64.dylib; library not loadable; PrintAssembly is disabled
<writer thread='19715'/>
PrintAssembly request changed to PrintOptoAssembly
<opto_assembly compile_id='22'>
{method}
 - this oop:          0x000000010de53dc8
 - method holder:     &apos;java/io/BufferedInputStream&apos;
 - constants:         0x000000010de53670 constant pool [155] {0x000000010de53670} for &apos;java/io/BufferedInputStream&apos; cache=0x000000010de55728
 - access:            0x81000002  private 
 - name:              &apos;getBufIfOpen&apos;
 - signature:         &apos;()[B&apos;
 - max stack:         4
 - max locals:        2
 - size of params:    1
 - method size:       12
 - highest level:     3
 - vtable index:      16
 - i2i entry:         0x000000010f2856e0
 - adapters:          AHE@0x00007facde002a70: 0xb0000000 i2c: 0x000000010f36dae0 c2i: 0x000000010f36dbf4 c2iUV: 0x000000010f36dbc7
 - compiled entry     0x000000010f466b40
 - code size:         21
 - code start:        0x000000010de53d88
 - code end (excl):   0x000000010de53d9d
 - method data:       0x000000010df6bff8
 - checked ex length: 1
 - checked ex start:  0x000000010de53dc4
 - linenumber start:  0x000000010de53d9d
 - localvar length:   2
 - localvar start:    0x000000010de53daa
 - compiled code: nmethod    595   10       3       java.io.BufferedInputStream::getBufIfOpen (21 bytes)
#
#  byte[int:&gt;=0]:exact * ( java/io/BufferedInputStream:NotNull * )
#
#r018 rsi:rsi   : parm 0: java/io/BufferedInputStream:NotNull *
# -- Old rsp -- Framesize: 48 --
#r191 rsp+44: in_preserve
#r190 rsp+40: return address
#r189 rsp+36: in_preserve
#r188 rsp+32: saved fp register
#r187 rsp+28: pad2, stack alignment
#r186 rsp+24: pad2, stack alignment
#r185 rsp+20: Fixed slot 1
#r184 rsp+16: Fixed slot 0
#r195 rsp+12: spill
#r194 rsp+ 8: spill
#r193 rsp+ 4: spill
#r192 rsp+ 0: spill
#
000   N37: #	B1 &lt;- BLOCK HEAD IS JUNK   Freq: 1
000   	movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point

      	nop 	# 12 bytes pad for loops and calls

020   B1: #	B3 B2 &lt;- BLOCK HEAD IS JUNK   Freq: 1
020   	# stack bang
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

02c   	movl    R10, [RSI + #32 (8-bit)]	# compressed ptr ! Field: volatile java/io/BufferedInputStream.buf
030   	MEMBAR-acquire ! (empty encoding)
030   	testl   R10, R10	# compressed ptr
033   	je,s   B3  P=0.000000 C=5524.000000
033
035   B2: #	N37 &lt;- B1  Freq: 1
035   	decode_heap_oop_not_null RAX,R10
039   	addq    rsp, 32	# Destroy frame
	popq   rbp
	testl  rax, [rip + #offset_to_poll_page]	# Safepoint: poll for GC

044   	ret
044
045   B3: #	N37 &lt;- B1  Freq: 4.76837e-07
045   	movl    RSI, #-83	# int
04a   	movl    [rsp + #0], R10	# spill
      	nop 	# 1 bytes pad for loops and calls
04f   	call,static  wrapper for: uncommon_trap(reason=&apos;unreached&apos; action=&apos;reinterpret&apos;)
        # java.io.BufferedInputStream::getBufIfOpen @ bci:6  L[0]=_ L[1]=rsp + #0 STK[0]=rsp + #0
        # OopMap{[0]=NarrowOop off=84}
054   	int3	# ShouldNotReachHere
054

</opto_assembly>
<writer thread='19203'/>
PrintAssembly request changed to PrintOptoAssembly
<opto_assembly compile_id='25'>
{method}
 - this oop:          0x000000010dd07808
 - method holder:     &apos;java/lang/String&apos;
 - constants:         0x000000010dd04100 constant pool [678] {0x000000010dd04100} for &apos;java/lang/String&apos; cache=0x000000010ddb4478
 - access:            0x81000001  public 
 - name:              &apos;charAt&apos;
 - signature:         &apos;(I)C&apos;
 - max stack:         4
 - max locals:        2
 - size of params:    2
 - method size:       12
 - highest level:     3
 - vtable index:      -2
 - i2i entry:         0x000000010f2856e0
 - adapters:          AHE@0x00007facde002c28: 0xba000000 i2c: 0x000000010f375460 c2i: 0x000000010f375577 c2iUV: 0x000000010f37554a
 - compiled entry     0x000000010f433580
 - code size:         29
 - code start:        0x000000010dd077c8
 - code end (excl):   0x000000010dd077e5
 - method data:       0x000000010deac8c8
 - checked ex length: 0
 - linenumber start:  0x000000010dd077e5
 - localvar length:   2
 - localvar start:    0x000000010dd077ee
 - compiled code: nmethod    639    3       3       java.lang.String::charAt (29 bytes)
#
#  char ( java/lang/String:NotNull:exact *, int )
#
#r018 rsi:rsi   : parm 0: java/lang/String:NotNull:exact *
#r016 rdx   : parm 1: int
# -- Old rsp -- Framesize: 48 --
#r191 rsp+44: in_preserve
#r190 rsp+40: return address
#r189 rsp+36: in_preserve
#r188 rsp+32: saved fp register
#r187 rsp+28: pad2, stack alignment
#r186 rsp+24: pad2, stack alignment
#r185 rsp+20: Fixed slot 1
#r184 rsp+16: Fixed slot 0
#r195 rsp+12: spill
#r194 rsp+ 8: spill
#r193 rsp+ 4: spill
#r192 rsp+ 0: spill
#
000   N70: #	B1 &lt;- BLOCK HEAD IS JUNK   Freq: 1
000   	movl    rscratch1, [j_rarg0 + oopDesc::klass_offset_in_bytes()]	# compressed klass
	decode_klass_not_null rscratch1, rscratch1
	cmpq    rax, rscratch1	 # Inline cache check
	jne     SharedRuntime::_ic_miss_stub
	nop	# nops to align entry point

      	nop 	# 12 bytes pad for loops and calls

020   B1: #	B7 B2 &lt;- BLOCK HEAD IS JUNK   Freq: 1
020   	# stack bang
	pushq   rbp	# Save rbp
	subq    rsp, #32	# Create frame

02c   	testl   RDX, RDX
02e   	jl,s   B7  P=0.000000 C=5704.000000
02e
030   B2: #	B8 B3 &lt;- B1  Freq: 1
030   	movl    RBP, [RSI + #12 (8-bit)]	# compressed ptr ! Field: java/lang/String.value
033   	movl    R10, [R12 + RBP &lt;&lt; 3 + #12] (compressed oop addressing)	# range
038   	NullCheck RBP
038
038   B3: #	B7 B4 &lt;- B2  Freq: 0.999999
038   	cmpl    RDX, R10
03b   	jge,s   B7  P=0.000000 C=5704.000000
03b
03d   B4: #	B6 B5 &lt;- B3  Freq: 0.999998
03d   	cmpl    RDX, R10	# unsigned
040   	jnb,us  B6  P=0.000001 C=-1.000000
040
042   B5: #	N70 &lt;- B4  Freq: 0.999997
042   	decode_heap_oop_not_null R10,RBP
046   	movzwl  RAX, [R10 + #16 + RDX &lt;&lt; #1]	# ushort/char
04c   	addq    rsp, 32	# Destroy frame
	popq   rbp
	testl  rax, [rip + #offset_to_poll_page]	# Safepoint: poll for GC

057   	ret
057
058   B6: #	N70 &lt;- B4  Freq: 1.01328e-06
058   	movl    RSI, #-28	# int
05d   	movl    [rsp + #0], RDX	# spill
      	nop 	# 3 bytes pad for loops and calls
063   	call,static  wrapper for: uncommon_trap(reason=&apos;range_check&apos; action=&apos;make_not_entrant&apos;)
        # java.lang.String::charAt @ bci:27  L[0]=_ L[1]=_ STK[0]=RBP STK[1]=rsp + #0
        # OopMap{rbp=NarrowOop off=104}
068   	int3	# ShouldNotReachHere
068
06d   B7: #	N70 &lt;- B3 B1  Freq: 9.76836e-07
06d   	movl    RSI, #5	# int
072   	movl    RBP, RDX	# spill
      	nop 	# 3 bytes pad for loops and calls
077   	call,static  wrapper for: uncommon_trap(reason=&apos;unloaded&apos; action=&apos;reinterpret&apos; index=&apos;5&apos;)
        # java.lang.String::charAt @ bci:13  L[0]=_ L[1]=RBP
        # OopMap{off=124}
07c   	int3	# ShouldNotReachHere
07c
081   B8: #	N70 &lt;- B2  Freq: 1.01328e-06
081   	movl    RSI, #-10	# int
      	nop 	# 1 bytes pad for loops and calls
087   	call,static  wrapper for: uncommon_trap(reason=&apos;null_check&apos; action=&apos;maybe_recompile&apos;)
        # java.lang.String::charAt @ bci:9  L[0]=_ L[1]=_ STK[0]=_ STK[1]=#NULL
        # OopMap{off=140}
08c   	int3	# ShouldNotReachHere
08c

</opto_assembly>
<writer thread='7171'/>
C1 Runtime statistics:
 _resolve_invoke_virtual_cnt:     0
 _resolve_invoke_opt_virtual_cnt: 0
 _resolve_invoke_static_cnt:      0
 _handle_wrong_method_cnt:        0
 _ic_miss_cnt:                    0
 _generic_arraycopy_cnt:          0
 _generic_arraycopystub_cnt:      0
 _byte_arraycopy_cnt:             0
 _short_arraycopy_cnt:            0
 _int_arraycopy_cnt:              0
 _long_arraycopy_cnt:             0
 _primitive_arraycopy_cnt:        0
 _oop_arraycopy_cnt (C):          0
 _oop_arraycopy_cnt (stub):       0
 _arraycopy_slowcase_cnt:         0
 _arraycopy_checkcast_cnt:        0
 _arraycopy_checkcast_attempt_cnt:0
 _new_type_array_slowcase_cnt:    0
 _new_object_array_slowcase_cnt:  0
 _new_instance_slowcase_cnt:      0
 _new_multi_array_slowcase_cnt:   0
 _monitorenter_slowcase_cnt:      0
 _monitorexit_slowcase_cnt:       0
 _patch_code_slowcase_cnt:        0
 _throw_range_check_exception_count:            0:
 _throw_index_exception_count:                  0:
 _throw_div0_exception_count:                   0:
 _throw_null_pointer_exception_count:           0:
 _throw_class_cast_exception_count:             0:
 _throw_incompatible_class_change_error_count:  0:
 _throw_array_store_exception_count:            0:
 _throw_count:                                  0:

<statistics type='SharedRuntime'>
    0 inline cache miss in compiled
    0 wrong method
    0 unresolved static call site
    0 unresolved virtual call site
    0 unresolved opt virtual call site
    6 slow partial subtype
   12 byte array copies
   12 short array copies
   12 int array copies
   12 long array copies
AdapterHandlerTable: empty 176 longest 3 total 149 average 1.273504
AdapterHandlerTable: lookups 5949 buckets 6110 equals 5800 hits 5800 compact 5800
</statistics>
<statistics type='nmethod'>
Statistics for 1 native nmethods:
 N. total size  = 1000
 N. relocation  = 80
 N. main code   = 632
Statistics for 14 bytecoded nmethods:
 total in heap  = 39240
 relocation     = 2600
 main code      = 20704
 stub code      = 2608
 oops           = 8
 scopes data    = 3176
 scopes pcs     = 5360
 dependencies   = 120
 nul chk table  = 256
Debug Data Chunks: 638, shared 76+132, non-SP&apos;s elided 6
PcDesc Statistics:  20 queries, 11.25 comparisons per query
  caches=14 queries=20/0, hits=0+0, tests=82+143, adds=20
</statistics>
<statistics type='opto'>
--- Compiler Statistics ---
Methods seen: 2  Methods parsed: 2  Nodes created: 2080
Blocks parsed: 6  Blocks seen: 7
6 original NULL checks - 4 elided (66%); optimizer leaves 18,
1 made implicit ( 5%)
CCP: 2  constants found: 0
Total frameslots = 80, Max frameslots = 32
Inserted 0 spill loads, 0 spill stores, 0 mem-mem moves and 0 copies.
Total load cost=      0, store cost =      0, mem-mem cost =  0.00, copy cost =     0.
Adjusted spill cost =       0.
Conservatively coalesced 38 copies, 0 pairs, 1 post alloc.
Used cisc instruction  0,  remained in register 2
Average allocation trips 1.000000
High Pressure Blocks = 0, Low Pressure Blocks = 0
Nops added 0 bytes to total of 2184 bytes, for 0.00%
Peephole: peephole rules applied: 0
PhaseIdealLoop=4, sum _unique=286
</statistics>
<writer thread='13571'/>
<destroy_vm stamp='0.660'/>
<tty_done stamp='0.674'/>
</tty>
<hotspot_log_done stamp='0.674'/>
</hotspot_log>
